apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'com.google.protobuf'
apply plugin: 'com.github.johnrengelman.shadow'
 
def grpcVersion = '1.0.0'
// This version must match the protobuf-java version that grpc transitively pulls in
def protobufVersion = '3.0.0'

buildscript {
  repositories {
    mavenCentral()
    jcenter()
  }
  dependencies {
    classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.0'
    classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.3'
  }
}

repositories {
  mavenCentral()
  mavenLocal()
  maven { url "http://repo.joist.ws" }
}

dependencies {
  compile "io.grpc:grpc-netty:${grpcVersion}"
  compile "io.grpc:grpc-protobuf:${grpcVersion}"
  compile "io.grpc:grpc-stub:${grpcVersion}"
  compile 'org.slf4j:slf4j-jdk14:1.7.18'
  compile 'com.github.jnr:jnr-posix:3.0.30-lutimes-SNAPSHOT'
  compile 'com.github.jnr:jnr-unixsocket:0.12'
  compile 'org.eclipse.jgit:org.eclipse.jgit:4.2.0.201601211800-r'
  compile 'commons-io:commons-io:2.4'
  compile 'org.apache.commons:commons-lang3:3.4'
  compile 'org.jooq:jool:0.9.10'
  compile 'com.github.rvesse:airline:2.1.1'
  compile 'joist:joist-util:1.13.1'
  testCompile 'junit:junit:4.12'
  testCompile 'org.hamcrest:java-hamcrest:2.0.0.0'
  testCompile 'org.mockito:mockito-core:2.0.44-beta'
}

protobuf {
  protoc {
    artifact = "com.google.protobuf:protoc:${protobufVersion}"
  }
  plugins {
    grpc {
      artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
    }
  }
  generateProtoTasks {
    all()*.plugins {
      grpc {}
    }
  }
}

eclipse {
  pathVariables 'GRADLE_USER_HOME': gradle.gradleUserHomeDir
  pathVariables 'M2_REPO': new File("${System.getenv('HOME')}/.m2/repository")
  classpath {
    file.whenMerged { cp ->
      cp.entries.add(new org.gradle.plugins.ide.eclipse.model.SourceFolder('build/generated/source/proto/main/java/', null))
      cp.entries.add(new org.gradle.plugins.ide.eclipse.model.SourceFolder('build/generated/source/proto/main/grpc/', null))
    }
    downloadSources = true
  }
}
